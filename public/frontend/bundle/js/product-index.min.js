/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/src/frontend/js/user-order-cart.js":
/*!******************************************************!*\
  !*** ./resources/src/frontend/js/user-order-cart.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
var USER_ORDER_CART = {
  authenticated_user: function () {
    var user = $('[data-authenticated-user]').attr('data-authenticated-user') || '{}';
    return JSON.parse(user);
  }(),
  init: function init() {
    USER_ORDER_CART.updateCartInfo();
  },
  updateCartInfo: function updateCartInfo() {
    var callback = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : function () {
      return undefined;
    };
    if (!USER_ORDER_CART.authenticated_user) {
      return;
    }
    $.ajax({
      url: CART_ROUTES.api_cart_info,
      method: 'GET',
      success: function success(response) {
        $('[data-value-cart-total-quantity]').text((response === null || response === void 0 ? void 0 : response.total_quantity) || 0);
        $('[data-value-cart-total-price]').text(utils_helper.formatPrice((response === null || response === void 0 ? void 0 : response.total_price) || 0));
        return callback(response);
      }
    });
  },
  addToCart: function addToCart(dataOrder) {
    var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    if (!USER_ORDER_CART.authenticated_user) {
      return;
    }
    var beforeSend = callback === null || callback === void 0 ? void 0 : callback.beforeSend;
    var success = callback === null || callback === void 0 ? void 0 : callback.success;
    dataOrder = _objectSpread({
      user_id: USER_ORDER_CART.authenticated_user.id
    }, dataOrder);
    $.ajax({
      url: CART_ROUTES.api_store_cart,
      method: 'POST',
      data: dataOrder,
      beforeSend: beforeSend,
      success: success,
      error: function error() {}
    });
  }
};
USER_ORDER_CART.init();
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (USER_ORDER_CART);

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};
// This entry need to be wrapped in an IIFE because it need to be isolated against other modules in the chunk.
(() => {
/*!****************************************************!*\
  !*** ./resources/src/frontend/js/product-index.js ***!
  \****************************************************/
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _user_order_cart__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./user-order-cart */ "./resources/src/frontend/js/user-order-cart.js");
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }
function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }
function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }

$('.thumbnail-list__item').on('click', function () {
  var index = $(this).attr('data-owl-index');
  $('[data-owl-id="Slider_Product_Detail"]').trigger('to.owl.carousel', index);
  $('.thumbnail-list__item').find('button.thumbnail').removeAttr('aria-current');
  $(this).find('button.thumbnail').attr('aria-current', 'true');
});
$('.share-button__copy').on('click', function () {
  var text = $('#url.field__input').val();
  utils_helper.copyClipBoard(text);
});
var MAIN_INVENTORY = {
  init: function init() {
    MAIN_INVENTORY.onChange();
    MAIN_INVENTORY.firstTrigger();
    MAIN_INVENTORY.mobileSaleActions();
  },
  mobileSaleActions: function mobileSaleActions() {
    $('[mobile-sale-action-addtocart]').on('click', function () {
      var isLogged = $('[data-canprocessasthesame]').attr('data-canprocessasthesame');
      var loginRef = $(this).attr('login-ref');
      if (!isLogged && loginRef) {
        $(loginRef).trigger('click');
        return;
      }
      FORM_ORDER.handleAddToCart(function () {
        fstoast.success('Đã thêm sản phẩm vào giỏ?', '', {
          onclick: function onclick() {
            window.location.href = $('#cart-icon-bubble').attr('href');
          }
        });
      });
    });
    $('[mobile-sale-action-buynow]').on('click', function () {
      $('#buy_now').trigger('click');
    });
  },
  variant_resources: function () {
    var data = $('#inventory_variants').attr('data-variants') || '{}';
    return JSON.parse(data);
  }(),
  inventory_selected: function () {
    var data = JSON.parse($('[data-inventory]').attr('data-inventory') || '{}');
    return data;
  }(),
  inventory_combos: [],
  firstTrigger: function firstTrigger() {
    FORM_ORDER.setDataOrder();
  },
  getFullData: function getFullData() {
    var data = {
      product_id: $('[name="product_id"]').val(),
      inventory: MAIN_INVENTORY.inventory_selected,
      has_combo: $('[data-product-combo-confirm]').is(':checked'),
      quantity: $('[data-stock-quantity]').val() || 0
    };
    return data;
  },
  calculateInventoryPrice: function calculateInventoryPrice() {
    var hasCombo = $('[data-product-combo-confirm]').is(':checked');
    var label = hasCombo ? 'Tổng Combo' : 'Tạm tính';
    var inventoryPrice = $('[data-price-value]').attr('data-price-value') || 0;
    var stockQuantity = $('[data-stock-quantity]').val() || 0;
    var totalPriceByStockQuantity = utils_helper.number(inventoryPrice).multiply(stockQuantity);
    var totalCartPrice = hasCombo ? function () {
      // Has Combo
      return MAIN_INVENTORY.inventory_combos.reduce(function (accumulator, currentValue) {
        return accumulator + utils_helper.number((currentValue === null || currentValue === void 0 ? void 0 : currentValue.sale_price) || 0).toFloat();
      }, totalPriceByStockQuantity);
    }() : function () {
      // No Combo
      return totalPriceByStockQuantity;
    }();
    $('[data-total-cart-label]').text(label);
    $('[data-total-cart-price]').html(utils_helper.formatPrice(totalCartPrice));
  },
  onChange: function onChange() {
    $('[name="attribute_value"]').on('change', function () {
      var value = $(this).val();
      var parent = $(this).parents('.attributes-item');
      parent.find('[name="attribute_value"]').prop('checked', false);
      parent.find('[name="attribute_value"]').parents('.label').removeClass('active');
      $(this).prop('checked', true);
      $(this).parents('.label').addClass('active');
      MAIN_INVENTORY.findProductByAttribute();
      MAIN_INVENTORY.calculateInventoryPrice();
      // MAIN_INVENTORY_QUANTITY.setValue(1);
      FORM_ORDER.setDataOrder();
      $('[data-stock-quantity]').trigger('change');
    });
  },
  findProductByAttribute: function findProductByAttribute() {
    var conditions = {};
    $.each($('.label.active'), function (index, element) {
      conditions[+$(element).find('input').attr('data-attribute-id')] = +$(element).find('input').val();
    });
    var inventory = MAIN_INVENTORY.variant_resources.find(function (item) {
      var attributes = item.attributes.map(function (item) {
        return item.id;
      });
      var attrValues = item.attribute_values.map(function (item) {
        return item.id;
      });
      var matches = function () {
        if (Object.keys(conditions).length == attributes.length && Object.keys(conditions).every(function (id) {
          return attributes.includes(+id);
        })) {
          if (Object.values(conditions).length == attrValues.length && Object.values(conditions).every(function (id) {
            return attrValues.includes(+id);
          })) {
            return true;
          }
        }
        return false;
      }();
      return matches;
    });
    MAIN_INVENTORY.renderInventory(inventory || null);
    MAIN_INVENTORY.inventory_selected = inventory || null;
    MAIN_INVENTORY.inventory_combos = (inventory === null || inventory === void 0 ? void 0 : inventory.product_combos) || [];
  },
  renderInventory: function renderInventory(inventory) {
    var href = PRODUCT_ROUTES.web_detail.replace(':slug', inventory.slug);
    $('html, body').animate({
      scrollTop: 0
    }, 800, function () {
      window.location.href = href;
    });
  }
};
var MAIN_INVENTORY_OPEN_IMAGE_GALERIES = {
  close_element: $('[data-media-modal-close]'),
  open_element: $('[data-media-modal-open]'),
  video_iframe: $('#product-video-iframe'),
  init: function init() {
    MAIN_INVENTORY_OPEN_IMAGE_GALERIES.onOpen();
    MAIN_INVENTORY_OPEN_IMAGE_GALERIES.onClose();
  },
  onOpen: function onOpen() {
    MAIN_INVENTORY_OPEN_IMAGE_GALERIES.open_element.on('click', function () {
      $('.product-modal-media .product-media-modal').attr('open', 'true');
      $('body').addClass('full-mode');
    });
  },
  onClose: function onClose() {
    MAIN_INVENTORY_OPEN_IMAGE_GALERIES.close_element.on('click', function () {
      $('.product-modal-media .product-media-modal').removeAttr('open');
      $('body').removeClass('full-mode');
      MAIN_INVENTORY_OPEN_IMAGE_GALERIES.video_iframe.remove();
      setTimeout(function () {
        $('.product-modal-media .product-media-modal__video').html(MAIN_INVENTORY_OPEN_IMAGE_GALERIES.video_iframe);
      }, 100);
    });
  }
};
var MAIN_INVENTORY_OPEN_DESCRIPTION = {
  close_element: $('[data-description-modal-close]'),
  open_element: $('[data-description-modal-open]'),
  init: function init() {
    MAIN_INVENTORY_OPEN_DESCRIPTION.onOpen();
    MAIN_INVENTORY_OPEN_DESCRIPTION.onClose();
  },
  onOpen: function onOpen() {
    MAIN_INVENTORY_OPEN_DESCRIPTION.open_element.on('click', function () {
      $('.product-modal-description .product-media-modal').attr('open', 'true');
      $('body').addClass('full-mode');
    });
  },
  onClose: function onClose() {
    MAIN_INVENTORY_OPEN_DESCRIPTION.close_element.on('click', function () {
      $('.product-modal-description .product-media-modal').removeAttr('open');
      $('body').removeClass('full-mode');
    });
  }
};
var MAIN_INVENTORY_OPEN_PRODUCT_REVIEW = {
  close_element: $('[data-product-review-modal-close]'),
  open_element: $('[data-product-review-modal-open]'),
  init: function init() {
    MAIN_INVENTORY_OPEN_PRODUCT_REVIEW.onOpen();
    MAIN_INVENTORY_OPEN_PRODUCT_REVIEW.onClose();
  },
  onOpen: function onOpen() {
    MAIN_INVENTORY_OPEN_PRODUCT_REVIEW.open_element.on('click', function () {
      $('.product-modal-product-review .product-media-modal').attr('open', 'true');
      $('body').addClass('full-mode');
    });
  },
  onClose: function onClose() {
    MAIN_INVENTORY_OPEN_PRODUCT_REVIEW.close_element.on('click', function () {
      $('.product-modal-product-review .product-media-modal').removeAttr('open');
      $('body').removeClass('full-mode');
    });
  }
};
var MAIN_INVENTORY_REVIEW = {
  init: function init() {
    MAIN_INVENTORY_REVIEW.onToggle();
    MAIN_INVENTORY_REVIEW.onReview();
  },
  onToggle: function onToggle() {
    $('.spr-summary-actions-newreview').on('click', function () {
      $('[data-product-review]').toggleClass('d-none');
    });
  },
  onReview: function onReview() {
    $('#User_Product_Review').on('submit', function (e) {
      e.preventDefault();
      var button = $('#User_Product_Review').find('button[type="submit"]');
      var ratingName = $('[name="rating_type"]').find("option[value=\"".concat($('[name="rating_type"]').val(), "\"]")).text();
      var formData = new FormData();
      var productId = $(this).find('[name="product_id"]').val();
      var ratingType = $(this).find('[name="rating_type"]').val();
      var content = $(this).find('[name="content"]').val();
      console.log({
        productId: productId,
        ratingType: ratingType,
        content: content
      });
      formData.append('product_id', productId);
      formData.append('rating_type', ratingType);
      formData.append('content', content);
      var files = $('#review_files')[0].files;

      // Append each file to the FormData object
      $.each(files, function (index, file) {
        formData.append('images[][file]', file);
      });
      $.ajax({
        url: $(this).attr('action'),
        method: 'POST',
        data: formData,
        processData: false,
        contentType: false,
        beforeSend: function beforeSend() {
          $(button).prop('disabled', true);
        },
        success: function success(response) {
          $(button).prop('disabled', false);
          $('#User_Product_Review').trigger("reset");
          $('.spr-summary-actions-newreview').trigger('click');
          $('.product-review-empty').remove();
          response.rating_type_name = ratingName;
          MAIN_INVENTORY_REVIEW.makeReviewHTML(response);
        },
        error: function error() {
          $(button).prop('disabled', false);
        }
      });
    });
  },
  makeReviewHTML: function makeReviewHTML(response) {
    var html = "\n            <div class=\"spr-reviews\" data-status=\"".concat(response.status, "\" data-status-name=\"").concat(response.status_name, "\">\n                <div>\u0110\xE1nh gi\xE1 c\u1EE7a b\u1EA1n \u0111ang \u0111\u01B0\u1EE3c duy\u1EC7t. Xin l\u1ED7i v\xEC s\u1EF1 b\u1EA5t ti\u1EC7n n\xE0y!</div>\n                <div class=\"spr-review\">\n                    <div class=\"spr-review-header\">\n                        <span class=\"spr-starratings spr-review-header-starratings\" role=\"img\">\n                            ").concat(response.rating_type_name, "\n                        </span>\n                        <h3 class=\"spr-review-header-title\">").concat(response.user_name, "</h3>\n                        <span class=\"spr-review-header-byline\">\n                            <strong>").concat(moment(response.created_at).format("DD/MM/YYYY"), "</strong>\n                        </span>\n                    </div>\n                    <div class=\"spr-review-content\">\n                        <p class=\"spr-review-content-body\">").concat(response.content, "</p>\n                    </div>\n                </div>\n            </div>\n        ");
    $('#shopify-product-reviews').find('.spr-content').append(html);
  }
};
var COMBO_INVENTORY = {
  init: function init() {
    COMBO_INVENTORY.onCheckedBuyWithCombo();
  },
  onCheckedBuyWithCombo: function onCheckedBuyWithCombo() {
    $('[data-product-combo-confirm]').on('change', function () {
      MAIN_INVENTORY.calculateInventoryPrice();
      FORM_ORDER.setDataOrder();
      $('[data-stock-quantity]').trigger('change');
    });
  },
  recalculatePrice: function recalculatePrice(productQuantity) {
    var product_combos = MAIN_INVENTORY.inventory_selected.product_combos;
    var newProductCombos = _toConsumableArray(product_combos).map(function (item) {
      return _objectSpread(_objectSpread({}, item), {}, {
        sale_price: utils_helper.number(item.sale_price).multiply(productQuantity)
      });
    });
    MAIN_INVENTORY.inventory_combos = newProductCombos;
  }
};
var FORM_ORDER = {
  init: function init() {
    FORM_ORDER.onAddToCart();
    FORM_ORDER.onBuyNow();
  },
  formOrderData: {},
  updateCookie: function updateCookie(data) {
    utils_helper.cookie(COOKIES_KEY.SHOPPING_CART).set(JSON.stringify(data));
  },
  setDataOrder: function setDataOrder() {
    var _MAIN_INVENTORY$getFu = MAIN_INVENTORY.getFullData(),
      quantity = _MAIN_INVENTORY$getFu.quantity,
      has_combo = _MAIN_INVENTORY$getFu.has_combo,
      inventory = _MAIN_INVENTORY$getFu.inventory,
      product_id = _MAIN_INVENTORY$getFu.product_id;
    $('form[form-add-to-cart]').find('[name="product_id"]').val(product_id);
    $('form[form-add-to-cart]').find('[name="inventory_id"]').val(inventory.id);
    $('form[form-add-to-cart]').find('[name="has_combo"]').val(has_combo ? '1' : '0');
    $('form[form-add-to-cart]').find('[name="quantity"]').val(quantity);
    FORM_ORDER.formOrderData = {
      product_id: +product_id,
      inventory_id: inventory.id,
      has_combo: has_combo ? 1 : 0,
      quantity: +quantity
    };
  },
  /**
   * product-sale-btn-item product-sale-btn-add-to-cart product-form__submit button button--full-width button--primary
   */
  onBuyNow: function onBuyNow() {
    $('#buy_now').on('click', function () {
      var returnUrl = $(this).attr('data-return-url');
      var isLogged = $('[data-canprocessasthesame]').attr('data-canprocessasthesame');
      var loginRef = $(this).attr('login-ref');
      if (!isLogged && loginRef) {
        $(loginRef).trigger('click');
        return;
      }
      FORM_ORDER.handleAddToCart(function () {
        window.location.href = returnUrl;
      });
    });
  },
  onAddToCart: function onAddToCart() {
    $('form[form-add-to-cart]').on('submit', function (e) {
      e.preventDefault();
      var isLogged = $('[data-canprocessasthesame]').attr('data-canprocessasthesame');
      var loginRef = $(this).attr('login-ref');
      if (!isLogged && loginRef) {
        $(loginRef).trigger('click');
        return;
      }
      FORM_ORDER.handleAddToCart(function () {
        fstoast.success('Đã thêm sản phẩm vào giỏ?', '', {
          onclick: function onclick() {
            window.location.href = $('#cart-icon-bubble').attr('href');
          }
        });
      });
    });
  },
  handleAddToCart: function handleAddToCart() {
    var callback = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : function () {
      return undefined;
    };
    _user_order_cart__WEBPACK_IMPORTED_MODULE_0__["default"].addToCart(_objectSpread({}, FORM_ORDER.formOrderData), {
      beforeSend: function beforeSend() {
        $('form[form-add-to-cart]').find('button[type="submit"]').addClass('loading');
        $('form[form-add-to-cart]').find('.loading-overlay__spinner').removeClass('hidden');
      },
      success: function success(response) {
        $('form[form-add-to-cart]').find('button[type="submit"]').removeClass('loading');
        $('form[form-add-to-cart]').find('.loading-overlay__spinner').addClass('hidden');
        _user_order_cart__WEBPACK_IMPORTED_MODULE_0__["default"].updateCartInfo();
        return callback();
      }
    });
  }
};
var MAIN_INVENTORY_QUANTITY = {
  init: function init() {
    utils_quantity('product', {
      callbacks: {
        onChange: function onChange(value) {
          COMBO_INVENTORY.recalculatePrice(value);
          MAIN_INVENTORY.calculateInventoryPrice();
          FORM_ORDER.setDataOrder();
        }
      }
    });
  }
};
COMBO_INVENTORY.init();
MAIN_INVENTORY.init();
MAIN_INVENTORY_OPEN_IMAGE_GALERIES.init();
MAIN_INVENTORY_OPEN_DESCRIPTION.init();
MAIN_INVENTORY_OPEN_PRODUCT_REVIEW.init();
MAIN_INVENTORY_REVIEW.init();
MAIN_INVENTORY_QUANTITY.init();
FORM_ORDER.init();
$(document).ready(function () {
  $('.review-inputfile').change(function () {
    var input = this;
    var label = $(input).next('label');
    var labelVal = label.html();

    // Check if the number of selected files exceeds 3
    if (input.files && input.files.length > 3) {
      alert("Bạn chỉ có thể thêm tối đa 3 ảnh.");
      // Clear the file input
      $(input).val('');
      label.html(labelVal);
      return; // Exit the function
    }
    var fileName = '';
    if (input.files && input.files.length > 1) {
      fileName = ($(input).data('multiple-caption') || '').replace('{count}', input.files.length);
    } else {
      fileName = $(input).val().split('\\').pop();
    }
    if (fileName) {
      label.find('span').html(fileName);
    } else {
      label.html(labelVal);
    }
  });
});
$(document).ready(function () {
  $(window).on('scroll', function () {
    var scrollPosition = $(window).scrollTop();
    var targetOffsetTop = $('.product-form__buttons').offset().top;
    var targetOffsetHei = $('.product-form__buttons').outerHeight();
    if (scrollPosition + targetOffsetHei > targetOffsetTop) {
      $('.mobile-sale-actions').addClass('show');
    } else {
      $('.mobile-sale-actions').removeClass('show');
    }
  });
});
})();

/******/ })()
;