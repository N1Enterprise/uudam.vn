/******/ (() => { // webpackBootstrap
var __webpack_exports__ = {};
/*!*****************************************************!*\
  !*** ./resources/src/frontend/js/authentication.js ***!
  \*****************************************************/
$(document).ready(function () {
  /**
   * Social Authentication
   */
  (function () {
    var SOCIAL_AUTHENTICATION = {
      init: function init() {
        SOCIAL_AUTHENTICATION.onOauthLogin();
        SOCIAL_AUTHENTICATION.onDetectOauthCode();
      },
      onDetectOauthCode: function onDetectOauthCode() {
        var oauthCode = utils_helper.urlParams('auth_code').get();
        var provider = utils_helper.urlParams('provider').get();
        var codeChallenge = utils_helper.urlParams('code_challenge').get();
        SOCIAL_AUTHENTICATION.handleLoginWithCode({
          provider: provider,
          auth_code: oauthCode,
          code_challenge: codeChallenge
        });
      },
      handleLoginWithCode: function handleLoginWithCode() {
        var payload = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
        if (!(payload !== null && payload !== void 0 && payload.provider) || !(payload !== null && payload !== void 0 && payload.auth_code)) {
          return;
        }
        $.ajax({
          url: AUTHENTICATION_ROUTES.api_oauth_signin,
          method: 'POST',
          data: payload,
          success: function success(response) {
            toastr.success('Đăng nhập thành công.');
            setTimeout(function () {
              window.opener ? window.close() : window.location.href = Cookies.get(COOKIE_KEYS.CURRENT_URL);
            }, 500);
          },
          error: function error() {
            toastr.error('Đăng nhập không thành công.');
            utils_helper.urlParams('auth_code').del();
            utils_helper.urlParams('provider').del();
            window.close();
          }
        });
      },
      loginWithWindowPopup: function loginWithWindowPopup(provider) {
        var windowInstance = openWindow(provider === null || provider === void 0 ? void 0 : provider.authorization_url, 'Đăng nhập với Facebook', 600, 600);
        if (!windowInstance) {
          return SOCIAL_AUTHENTICATION.loginWithNewTab(provider);
        }
        var checkPopupClosed = setInterval(function () {
          if (windowInstance.closed) {
            clearInterval(checkPopupClosed);
            handleAfterLoginSucceed();
          }
        }, 1000);
        function handleAfterLoginSucceed() {
          setTimeout(function () {
            return window.location.reload();
          }, 500);
        }
      },
      loginWithNewTab: function loginWithNewTab(provider) {
        window.location.href = provider === null || provider === void 0 ? void 0 : provider.authorization_url;
      },
      onOauthLogin: function onOauthLogin() {
        $('[data-oauth-provider]').on('click', function () {
          var route = $(this).attr('data-oauth-login-route');
          var provider = $(this).attr('data-oauth-provider');
          $.ajax({
            url: route,
            method: 'GET',
            data: {
              provider: provider
            },
            beforeSend: function beforeSend() {
              // $('[data-oauth-provider]').addClass('disabled');
            },
            success: function success(_ref) {
              var oauth_providers = _ref.oauth_providers;
              var selectedProvider = oauth_providers.find(function (item) {
                return item.provider == provider;
              });
              if (selectedProvider) {
                var windowWidth = window.innerWidth;
                Cookies.set(COOKIE_KEYS.CURRENT_URL, window.location.href);
                if (windowWidth > 800) {
                  return SOCIAL_AUTHENTICATION.loginWithWindowPopup(selectedProvider);
                }
                return SOCIAL_AUTHENTICATION.loginWithNewTab(selectedProvider);
              }
            },
            error: function error() {
              toastr.error('Đăng nhập không thành công.');
              utils_helper.urlParams('auth_code').del();
              utils_helper.urlParams('provider').del();
              $('[data-oauth-provider]').removeClass('disabled');
            }
          });
        });
      }
    };
    SOCIAL_AUTHENTICATION.init();
  })();
  (function () {
    var AUTHENTICATION = {
      actions: ['signin', 'signup', 'forgot-password', 'reset-password'],
      is_logged: $('[data-canprocessasthesame]').attr('data-canprocessasthesame'),
      elements: {
        close: $('[data-overlay-close]'),
        wrapper: $('[data-overlay-wrapper]'),
        action_wrapper: $('[data-overlay-action-wrapper]'),
        action_signin_wrapper: $('[data-overlay-action-wrapper="signin"]'),
        action_signup_wrapper: $('[data-overlay-action-wrapper="signup"]'),
        btn_signin: $('[data-overlay-action-button="signin"]'),
        btn_signup: $('[data-overlay-action-button="signup"]')
      },
      init: function init() {
        AUTHENTICATION.onClose();
        AUTHENTICATION.onGoPage();
        AUTHENTICATION.detectOverlay();
        AUTHENTICATION.onSignup();
        AUTHENTICATION.onSignin();
        AUTHENTICATION.onSignout();
        AUTHENTICATION.onForgetPassword();
        AUTHENTICATION.onChangePassword();
      },
      onChangePassword: function onChangePassword() {
        $('#reset_password_form').on('submit', function (e) {
          e.preventDefault();
          var _self = $(this);
          $.ajax({
            url: _self.attr('action'),
            method: 'PUT',
            data: _self.serialize(),
            beforeSend: function beforeSend() {
              _self.find('[type="submit"]').prop('disabled', true);
              _self.find('[type="submit"]').text('Đang xử lí...');
            },
            success: function success() {
              toastr.success('Thay đổi mật khẩu thành công.');
              _self.find('[data-overlay-action-button="signin"]').trigger('click');
            },
            error: function error(request, status, _error) {
              _self.find('[type="submit"]').prop('disabled', false);
              _self.find('[type="submit"]').text('Xác nhận thay đổi');
              toastr.error('Thay đổi mật khẩu không thành công.');
              if (request.status == 422) {
                var errorMessage = request.responseJSON.errors;
                utils_helper.appendErrorMessages(_self, errorMessage);
              }
            }
          });
        });
      },
      onForgetPassword: function onForgetPassword() {
        $('#forgot_password_form').on('submit', function (e) {
          e.preventDefault();
          var _self = $(this);
          var payload = {
            email: _self.find('[name="email"]').val()
          };
          $.ajax({
            url: _self.attr('action'),
            method: 'POST',
            data: payload,
            beforeSend: function beforeSend() {
              _self.find('[type="submit"]').prop('disabled', true);
              _self.find('.form-errors').removeClass('show');
              $('.password-reset-sent-success').addClass('d-none');
              $('.password-reset-pending').removeClass('d-none');
            },
            success: function success(response) {
              $('.password-reset-sent-success').find('user-mail').text(payload.email);
              $('.password-reset-sent-success').removeClass('d-none');
              $('.password-reset-pending').addClass('d-none');
              utils_helper.urlParams('overlay').del();
              utils_helper.urlParams('redirect').del();
            },
            error: function error(request, status, _error2) {
              _self.find('[type="submit"]').prop('disabled', false);
              toastr.error('Xử lí quên mật khẩu không thành công.');
              if (request.status == 422) {
                var errorMessage = request.responseJSON.errors;
                utils_helper.appendErrorMessages(_self, errorMessage);
              }
            }
          });
        });
      },
      onSignout: function onSignout() {
        $('#User_SignOut').on('click', function (e) {
          e.preventDefault();
          $.ajax({
            url: $(this).attr('href'),
            method: 'POST',
            success: function success() {
              toastr.success('Đăng xuất thành công.');
              window.location.href = HOME_ROUTES.web_home;
            }
          });
        });
      },
      onSignup: function onSignup() {
        $('#signup_form').on('submit', function (e) {
          e.preventDefault();
          var _self = $(this);
          var payload = {
            name: _self.find('[name="name"]').val(),
            phone_number: _self.find('[name="phone_number"]').val(),
            email: _self.find('[name="email"]').val(),
            password: _self.find('[name="password"]').val()
          };
          $.ajax({
            url: _self.attr('action'),
            method: 'POST',
            data: payload,
            beforeSend: function beforeSend() {
              _self.find('[type="submit"]').prop('disabled', true);
              _self.find('.form-errors').removeClass('show');
            },
            success: function success(response) {
              toastr.success('Đăng ký thành công.');
              _self.find('[type="submit"]').prop('disabled', false);
              AUTHENTICATION.elements.close.trigger('click');
              window.location.href = HOME_ROUTES.web_home;
            },
            error: function error(request, status, _error3) {
              _self.find('[type="submit"]').prop('disabled', false);
              if (request.status == 422) {
                var errorMessage = request.responseJSON.errors;
                utils_helper.appendErrorMessages(_self, errorMessage);
              }
            }
          });
        });
      },
      onSignin: function onSignin() {
        $('#signin_form').on('submit', function (e) {
          e.preventDefault();
          var _self = $(this);
          var payload = {
            username: _self.find('[name="username"]').val(),
            password: _self.find('[name="password"]').val()
          };
          $.ajax({
            url: _self.attr('action'),
            method: 'POST',
            data: payload,
            beforeSend: function beforeSend() {
              _self.find('[type="submit"]').prop('disabled', true);
              _self.find('.form-errors').removeClass('show');
            },
            success: function success(response) {
              toastr.success('Đăng nhập thành công.');
              _self.find('[type="submit"]').prop('disabled', false);
              AUTHENTICATION.elements.close.trigger('click');
              var routeRedirect = utils_helper.urlParams('redirect').get() || HOME_ROUTES.web_home;
              window.location.href = routeRedirect;
            },
            error: function error(request, status, _error4) {
              _self.find('[type="submit"]').prop('disabled', false);
              if (request.status == 422) {
                var errorMessage = request.responseJSON.errors;
                utils_helper.appendErrorMessages(_self, errorMessage);
              }
            }
          });
        });
      },
      onClose: function onClose() {
        AUTHENTICATION.elements.close.on('click', function () {
          AUTHENTICATION.elements.wrapper.hide();
          AUTHENTICATION.elements.action_wrapper.hide();
          utils_helper.urlParams('overlay').del();
          utils_helper.urlParams('redirect').del();
          utils_helper.urlParams('token').del();
          utils_helper.urlParams('email').del();
          $('.password-reset-sent-success').addClass('d-none');
          $('.password-reset-pending').removeClass('d-none');
        });
      },
      onGoPage: function onGoPage() {
        $('[data-overlay-action-button]').on('click', function (e) {
          e.preventDefault();
          var overlay = $(this).attr('data-overlay-action-button');
          var dataRedirect = $(this).attr('data-redirect');
          if (overlay && AUTHENTICATION.actions.includes(overlay)) {
            AUTHENTICATION.elements.wrapper.show();
            AUTHENTICATION.elements.action_wrapper.hide();
            utils_helper.urlParams('overlay').set(overlay);
            if (dataRedirect) {
              utils_helper.urlParams('redirect').set(dataRedirect);
            }
            $("[data-overlay-action-wrapper=\"".concat(overlay, "\"]")).show();
          } else {
            AUTHENTICATION.elements.wrapper.hide();
            AUTHENTICATION.elements.action_wrapper.hide();
          }
        });
      },
      detectOverlay: function detectOverlay() {
        var overlay = utils_helper.urlParams('overlay').get();
        AUTHENTICATION.elements.wrapper.hide();
        AUTHENTICATION.elements.action_wrapper.hide();
        if (AUTHENTICATION.actions.includes(overlay) && AUTHENTICATION.is_logged) {
          var redirect = utils_helper.urlParams('redirect').get();
          utils_helper.urlParams('overlay').del();
          if (redirect) {
            window.location.href = redirect;
          }
          return;
        }
        if (overlay && AUTHENTICATION.actions.includes(overlay)) {
          AUTHENTICATION.elements.wrapper.show();
          $("[data-overlay-action-wrapper=\"".concat(overlay, "\"]")).show();
        }
      }
    };
    AUTHENTICATION.init();
  })();
});
/******/ })()
;